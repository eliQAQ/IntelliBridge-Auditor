{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x0c5fF93c30c201756C8066c73Cab697DC90DE6F7",
      "txHash": "0xc6c764fe6ef53a002c88f474cc34e30fcd0eda4e259f482375983ddfc188b9c1",
      "kind": "transparent"
    },
    {
      "address": "0x045b61074568CD8a3210b3C634e5E5e647327dA6",
      "txHash": "0x60e908ccbb77f4bef841c917e1c6c48f1fced04d0d62cf830da7cbfc8f0e0e60",
      "kind": "transparent"
    },
    {
      "address": "0x71162dCC16b321F9F2e321695e70d5774739f45C",
      "txHash": "0x406f1a221807efbc6ecdd068a66a15fabf3ec9ea0980f0f866edaf8da66182dd",
      "kind": "transparent"
    },
    {
      "address": "0x38A13AB20D15ffbE5A7312d2336EF1552580a4E2",
      "txHash": "0x43abea186d1b4dd55f40c656aa795f35bee37e5e0e494c75dfe8c145e669140d",
      "kind": "transparent"
    },
    {
      "address": "0xD3f28A002EBA50315bFBd1880cf4511f34a94Fc6",
      "txHash": "0xbe317a9ade56b14e189c4c860b9739b2193c21a593c9e6793c4b45cce1f0b3b3",
      "kind": "transparent"
    },
    {
      "address": "0xD7377db0dCBA2f5641F294e57c1E85Da47A34fa8",
      "txHash": "0x0e99f6bb0314ba196e42a98cd417cc5114bb6dd7f19bd766e2e9fc95a58a0346",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f8b258e4ee35aeed990d0d0e4f2ce71b76e0ce30f752abc62dab5bd070e50d21": {
      "address": "0x70F0e5818Ce24A2B932d22773FE67B29eD6c88d3",
      "txHash": "0x62919fcf5830fee95e125d53fdceb9511b380e317566a1bd482083ad1b2af32f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(ConsortiumStorage)2503_storage": {
            "label": "struct LombardConsortium.ConsortiumStorage",
            "members": [
              {
                "label": "thresholdAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)192_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)99_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)141_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:lombardfinance.storage.Consortium": [
            {
              "contract": "LombardConsortium",
              "label": "thresholdAddr",
              "type": "t_address",
              "src": "contracts/consortium/LombardConsortium.sol:22",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "710b24e5495b46cae4a8924c1366423daecdfb3346ec4bf836639dd14f6bc59a": {
      "address": "0x3Ed5680AeA1cC2AFCc31E2E8C6766484D7286586",
      "txHash": "0x5ae9b06437747977af8d26477c1dcce2fe7d2e72d8b391be24d7baeb2ee71f8f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IBascule)2439": {
            "label": "contract IBascule",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1381": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint16)": {
            "label": "mapping(bytes32 => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint64)": {
            "label": "mapping(bytes32 => uint64)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint16)": {
            "label": "mapping(uint256 => uint16)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)655_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)328_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)192_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LBTCStorage)2187_storage": {
            "label": "struct LBTC.LBTCStorage",
            "members": [
              {
                "label": "usedProofs",
                "type": "t_mapping(t_bytes32,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isWithdrawalsEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "consortium",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isWBTCEnabled",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "wbtc",
                "type": "t_contract(IERC20)1381",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "treasury",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "__removed_destinations",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "__removed_depositCommission",
                "type": "t_mapping(t_uint256,t_uint16)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "__removed_usedBridgeProofs",
                "type": "t_mapping(t_bytes32,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "__removed_globalNonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "destinations",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "depositRelativeCommission",
                "type": "t_mapping(t_bytes32,t_uint16)",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "depositAbsoluteCommission",
                "type": "t_mapping(t_bytes32,t_uint64)",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "burnCommission",
                "type": "t_uint64",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "dustFeeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "bascule",
                "type": "t_contract(IBascule)2439",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "pauser",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "minters",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "17"
              }
            ],
            "numberOfBytes": "576"
          },
          "t_struct(NoncesStorage)498_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)99_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)141_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)535_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)599_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:lombardfinance.storage.LBTC": [
            {
              "contract": "LBTC",
              "label": "usedProofs",
              "type": "t_mapping(t_bytes32,t_bool)",
              "src": "contracts/LBTC/LBTC.sol:29",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "LBTC",
              "label": "name",
              "type": "t_string_storage",
              "src": "contracts/LBTC/LBTC.sol:31",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "LBTC",
              "label": "symbol",
              "type": "t_string_storage",
              "src": "contracts/LBTC/LBTC.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "LBTC",
              "label": "isWithdrawalsEnabled",
              "type": "t_bool",
              "src": "contracts/LBTC/LBTC.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "LBTC",
              "label": "consortium",
              "type": "t_address",
              "src": "contracts/LBTC/LBTC.sol:35",
              "offset": 1,
              "slot": "3"
            },
            {
              "contract": "LBTC",
              "label": "isWBTCEnabled",
              "type": "t_bool",
              "src": "contracts/LBTC/LBTC.sol:36",
              "offset": 21,
              "slot": "3"
            },
            {
              "contract": "LBTC",
              "label": "wbtc",
              "type": "t_contract(IERC20)1381",
              "src": "contracts/LBTC/LBTC.sol:38",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "LBTC",
              "label": "treasury",
              "type": "t_address",
              "src": "contracts/LBTC/LBTC.sol:40",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "LBTC",
              "label": "__removed_destinations",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/LBTC/LBTC.sol:43",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "LBTC",
              "label": "__removed_depositCommission",
              "type": "t_mapping(t_uint256,t_uint16)",
              "src": "contracts/LBTC/LBTC.sol:45",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "LBTC",
              "label": "__removed_usedBridgeProofs",
              "type": "t_mapping(t_bytes32,t_bool)",
              "src": "contracts/LBTC/LBTC.sol:47",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "LBTC",
              "label": "__removed_globalNonce",
              "type": "t_uint256",
              "src": "contracts/LBTC/LBTC.sol:49",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "LBTC",
              "label": "destinations",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "src": "contracts/LBTC/LBTC.sol:51",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "LBTC",
              "label": "depositRelativeCommission",
              "type": "t_mapping(t_bytes32,t_uint16)",
              "src": "contracts/LBTC/LBTC.sol:52",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "LBTC",
              "label": "depositAbsoluteCommission",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "src": "contracts/LBTC/LBTC.sol:53",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "LBTC",
              "label": "burnCommission",
              "type": "t_uint64",
              "src": "contracts/LBTC/LBTC.sol:55",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "LBTC",
              "label": "dustFeeRate",
              "type": "t_uint256",
              "src": "contracts/LBTC/LBTC.sol:56",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "LBTC",
              "label": "bascule",
              "type": "t_contract(IBascule)2439",
              "src": "contracts/LBTC/LBTC.sol:59",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "LBTC",
              "label": "pauser",
              "type": "t_address",
              "src": "contracts/LBTC/LBTC.sol:61",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "LBTC",
              "label": "minters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/LBTC/LBTC.sol:63",
              "offset": 0,
              "slot": "17"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a89e5f94a79551b0e64fea60c2c4da0ec7fb50451afd7d55e438722ffd209eac": {
      "address": "0xD27cdA6E1eD6C807280670Ea0E06D1342f778B3E",
      "txHash": "0xb38d88aedd9b99bae2a76526f423bb5636d86f02930c868c77c6a6b26462b56d",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)192_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)535_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
