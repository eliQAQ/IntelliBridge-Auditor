{"Function call relationship": "ChainSwap20210711/AnyswapV4Router.AnyswapV4Router.anySwapOutExactTokensForNativeUnderlyingWithPermit", "code": ["function anySwapOutExactTokensForNativeUnderlyingWithPermit(\n        address from,\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s,\n        uint toChainID\n    ) external virtual ensure(deadline) {\n        address _underlying = AnyswapV1ERC20(path[0]).underlying();\n        IERC20(_underlying).permit(from, address(this), amountIn, deadline, v, r, s);\n        TransferHelper.safeTransferFrom(_underlying, from, path[0], amountIn);\n        AnyswapV1ERC20(path[0]).depositVault(amountIn, from);\n        AnyswapV1ERC20(path[0]).burn(from, amountIn);\n        {\n        address[] memory _path = path;\n        address _from = from;\n        address _to = to;\n        uint _amountIn = amountIn;\n        uint _amountOutMin = amountOutMin;\n        uint _cID = cID();\n        uint _toChainID = toChainID;\n        emit LogAnySwapTradeTokensForNative(_path, _from, _to, _amountIn, _amountOutMin, _cID, _toChainID);\n        }\n    }", "", "function cID() public view returns (uint id) {\n        assembly {id := chainid()}\n    }"]}