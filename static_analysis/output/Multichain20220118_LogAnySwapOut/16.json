{"Function call relationship": "ERC1155Gateway.Swapout_no_fallback", "code": ["ERC1155Gateway.Swapout_no_fallback:function Swapout_no_fallback(uint256 tokenId, uint256 amount, address receiver, uint256 destChainID) external payable returns (uint256) {\n        (bool ok, bytes memory extraMsg) = _swapout(msg.sender, tokenId, amount);\n        require(ok);\n        swapoutSeq++;\n        bytes memory data = abi.encode(tokenId, amount, msg.sender, receiver, swapoutSeq, extraMsg);\n        _anyCall(peer[destChainID], data, address(0), destChainID);\n        emit LogAnySwapOut(tokenId, msg.sender, receiver, destChainID, swapoutSeq);\n        return swapoutSeq;\n    }", "ERC1155Gateway._swapout:function _swapout(address sender, uint256 tokenId, uint256 amount) internal virtual returns (bool, bytes memory);\n    function _swapin(uint256 tokenId, uint256 amount, address receiver, bytes memory extraMsg) internal virtual returns (bool);\n\n    event LogAnySwapOut(uint256 tokenId, address sender, address receiver, uint256 toChainID, uint256 swapoutSeq);\n\n    function Swapout_no_fallback(uint256 tokenId, uint256 amount, address receiver, uint256 destChainID) external payable returns (uint256) {\n        (bool ok, bytes memory extraMsg) = _swapout(msg.sender, tokenId, amount);\n        require(ok);\n        swapoutSeq++;\n        bytes memory data = abi.encode(tokenId, amount, msg.sender, receiver, swapoutSeq, extraMsg);\n        _anyCall(peer[destChainID], data, address(0), destChainID);\n        emit LogAnySwapOut(tokenId, msg.sender, receiver, destChainID, swapoutSeq);\n        return swapoutSeq;\n    }"]}