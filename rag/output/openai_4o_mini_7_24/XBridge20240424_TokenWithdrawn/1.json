{"Function call relationship": "XBridge.withdrawTokens", "code": ["XBridge.withdrawTokens:function withdrawTokens(address token, address receiver, uint256 amount) external {\n        // require(token.code.length > 0, \"TOKEN_NOT_DEPLOYED_ON_THIS_CHAIN\");\n        // address _correspondingToken = tokenToTokenWithChainId[srcId][dstId][token];\n        require(token != address(0), \"TOKEN_NOT_LISTED\");\n        require(amount > 0, \"AMOUNT_CANT_BE_ZERO\");\n        address user = msg.sender;\n        require(user == _tokenOwner[token], \"ONLY_TOKEN_LISTER_CAN_WITHDRAW\");\n        // require(user == tokenOwnerWithChainId[srcId][dstId][token][_correspondingToken], \"ONLY_TOKEN_LISTER_CAN_WITHDRAW\");\n\n        if(token != native) {\n\n            require(amount <= (IERC20(token).balanceOf(address(this)) - tokenTax[token]), \"WITHDRAW_LESS\");\n\n            if(isWrapped[token]) revert(\"CANT_WITHDRAW_WRAPPED_TOKENS\");\n\n            IERC20(token).transfer(receiver, amount);\n        } else {\n            require(amount <= address(this).balance, \"WITHDRAW_LESS\");\n            (bool success, ) = payable(receiver).call{value: amount}(\"\");\n            require(success, \"WITHDRAW_FAILED\");\n        }\n\n        emit TokenWithdrawn(user, receiver, amount);\n    }"]}