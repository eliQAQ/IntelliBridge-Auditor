digraph G {
  graph [ ratio = "auto", page = "100", compound =true ];
subgraph "clusterPolyWrapperV1" {
  graph [ label = "PolyWrapperV1", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "PolyWrapperV1.<Constructor>" [ label = "<Constructor>", color = "green" ];
  "PolyWrapperV1.setFeeCollector" [ label = "setFeeCollector", color = "blue" ];
  "PolyWrapperV1.setLockProxy" [ label = "setLockProxy", color = "blue" ];
  "PolyWrapperV1.pause" [ label = "pause", color = "blue" ];
  "PolyWrapperV1.unpause" [ label = "unpause", color = "blue" ];
  "PolyWrapperV1.extractFee" [ label = "extractFee", color = "blue" ];
  "PolyWrapperV1.lock" [ label = "lock", color = "green" ];
  "PolyWrapperV1.speedUp" [ label = "speedUp", color = "green" ];
  "PolyWrapperV1._pull" [ label = "_pull" ];
  "PolyWrapperV1._push" [ label = "_push" ];
  "PolyWrapperV1.transferOwnership" [ label = "transferOwnership" ];
  "PolyWrapperV1.address" [ label = "address" ];
  "PolyWrapperV1.ILockProxy" [ label = "ILockProxy" ];
  "PolyWrapperV1._pause" [ label = "_pause" ];
  "PolyWrapperV1._unpause" [ label = "_unpause" ];
  "PolyWrapperV1.IERC20" [ label = "IERC20" ];
}

subgraph "clusterILockProxy" {
  graph [ label = "ILockProxy", color = "lightgray" ];
  "ILockProxy.managerProxyContract" [ label = "managerProxyContract" ];
  "ILockProxy.lock" [ label = "lock" ];
}

subgraph "clusteramount" {
  graph [ label = "amount", color = "lightgray" ];
  "amount.sub" [ label = "sub" ];
}

  "PolyWrapperV1.<Constructor>";
  "PolyWrapperV1.transferOwnership";
  "PolyWrapperV1.setFeeCollector";
  "PolyWrapperV1.address";
  "PolyWrapperV1.setLockProxy";
  "PolyWrapperV1.ILockProxy";
  "ILockProxy.managerProxyContract";
  "PolyWrapperV1.pause";
  "PolyWrapperV1._pause";
  "PolyWrapperV1.unpause";
  "PolyWrapperV1._unpause";
  "PolyWrapperV1.extractFee";
  "PolyWrapperV1.IERC20";
  "PolyWrapperV1.lock";
  "PolyWrapperV1._pull";
  "PolyWrapperV1._push";
  "amount.sub";
  "PolyWrapperV1.speedUp";
  "ILockProxy.lock";
  "PolyWrapperV1.<Constructor>" -> "PolyWrapperV1.transferOwnership" [ color = "green" ];
  "PolyWrapperV1.setFeeCollector" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1.setLockProxy" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1.setLockProxy" -> "PolyWrapperV1.ILockProxy" [ color = "green" ];
  "PolyWrapperV1.setLockProxy" -> "ILockProxy.managerProxyContract" [ color = "orange" ];
  "PolyWrapperV1.setLockProxy" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1.pause" -> "PolyWrapperV1._pause" [ color = "green" ];
  "PolyWrapperV1.unpause" -> "PolyWrapperV1._unpause" [ color = "green" ];
  "PolyWrapperV1.extractFee" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1.extractFee" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1.extractFee" -> "PolyWrapperV1.IERC20" [ color = "green" ];
  "PolyWrapperV1.extractFee" -> "PolyWrapperV1.IERC20" [ color = "green" ];
  "PolyWrapperV1.extractFee" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1.lock" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1.lock" -> "PolyWrapperV1._pull" [ color = "green" ];
  "PolyWrapperV1.lock" -> "PolyWrapperV1._push" [ color = "green" ];
  "PolyWrapperV1.lock" -> "amount.sub" [ color = "orange" ];
  "PolyWrapperV1.lock" -> "amount.sub" [ color = "orange" ];
  "PolyWrapperV1.speedUp" -> "PolyWrapperV1._pull" [ color = "green" ];
  "PolyWrapperV1._pull" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1._pull" -> "PolyWrapperV1.IERC20" [ color = "green" ];
  "PolyWrapperV1._pull" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1._push" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1._push" -> "PolyWrapperV1.IERC20" [ color = "green" ];
  "PolyWrapperV1._push" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1._push" -> "PolyWrapperV1.IERC20" [ color = "green" ];
  "PolyWrapperV1._push" -> "PolyWrapperV1.address" [ color = "green" ];
  "PolyWrapperV1._push" -> "ILockProxy.lock" [ color = "orange" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i2">Custom Error Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="lightgray">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="lightgray">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="green"]
key:i2:e -> key2:i2:w [color="orange"]
key:i2:e -> key2:i2:w [color="red"]
}
}

