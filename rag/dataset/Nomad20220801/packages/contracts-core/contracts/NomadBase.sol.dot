digraph G {
  graph [ ratio = "auto", page = "100", compound =true ];
subgraph "clusterNomadBase" {
  graph [ label = "NomadBase", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "NomadBase.<Constructor>" [ label = "<Constructor>", color = "green" ];
  "NomadBase.__NomadBase_initialize" [ label = "__NomadBase_initialize", color = "white" ];
  "NomadBase.homeDomainHash" [ label = "homeDomainHash" ];
  "NomadBase._homeDomainHash" [ label = "_homeDomainHash", color = "white" ];
  "NomadBase._setUpdater" [ label = "_setUpdater" ];
  "NomadBase._isUpdaterSignature" [ label = "_isUpdaterSignature", color = "white" ];
  "NomadBase.renounceOwnership" [ label = "renounceOwnership", color = "green" ];
  "NomadBase.__Ownable_init" [ label = "__Ownable_init" ];
}

subgraph "clusterECDSA" {
  graph [ label = "ECDSA", color = "lightgray" ];
  "ECDSA.toEthSignedMessageHash" [ label = "toEthSignedMessageHash" ];
  "ECDSA.recover" [ label = "recover" ];
}

  "NomadBase.__NomadBase_initialize";
  "NomadBase.__Ownable_init";
  "NomadBase._setUpdater";
  "NomadBase._isUpdaterSignature";
  "NomadBase.homeDomainHash";
  "ECDSA.toEthSignedMessageHash";
  "ECDSA.recover";
  "NomadBase.__NomadBase_initialize" -> "NomadBase.__Ownable_init" [ color = "green" ];
  "NomadBase.__NomadBase_initialize" -> "NomadBase._setUpdater" [ color = "green" ];
  "NomadBase._isUpdaterSignature" -> "NomadBase.homeDomainHash" [ color = "green" ];
  "NomadBase._isUpdaterSignature" -> "ECDSA.toEthSignedMessageHash" [ color = "orange" ];
  "NomadBase._isUpdaterSignature" -> "ECDSA.recover" [ color = "orange" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i2">Custom Error Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="lightgray">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="lightgray">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="green"]
key:i2:e -> key2:i2:w [color="orange"]
key:i2:e -> key2:i2:w [color="red"]
}
}

