digraph G {
  graph [ ratio = "auto", page = "100", compound =true ];
subgraph "clusterERC20" {
  graph [ label = "ERC20", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "ERC20.transfer" [ label = "transfer", color = "green" ];
  "ERC20.approve" [ label = "approve", color = "green" ];
  "ERC20.transferFrom" [ label = "transferFrom", color = "green" ];
  "ERC20.increaseAllowance" [ label = "increaseAllowance", color = "green" ];
  "ERC20.decreaseAllowance" [ label = "decreaseAllowance", color = "green" ];
  "ERC20.totalSupply" [ label = "totalSupply", color = "green" ];
  "ERC20.balanceOf" [ label = "balanceOf", color = "green" ];
  "ERC20.allowance" [ label = "allowance", color = "green" ];
  "ERC20._transfer" [ label = "_transfer" ];
  "ERC20._mint" [ label = "_mint", color = "white" ];
  "ERC20._burn" [ label = "_burn", color = "white" ];
  "ERC20._approve" [ label = "_approve" ];
  "ERC20._setupDecimals" [ label = "_setupDecimals", color = "white" ];
  "ERC20._beforeTokenTransfer" [ label = "_beforeTokenTransfer" ];
  "ERC20.address" [ label = "address" ];
  "ERC20.Transfer" [ label = "Transfer" ];
  "ERC20.Approval" [ label = "Approval" ];
}

subgraph "clustersupply" {
  graph [ label = "supply", color = "lightgray" ];
  "supply.add" [ label = "add" ];
  "supply.sub" [ label = "sub" ];
}

  "ERC20.transfer";
  "ERC20._transfer";
  "ERC20.approve";
  "ERC20._approve";
  "ERC20.transferFrom";
  "ERC20.increaseAllowance";
  "ERC20.decreaseAllowance";
  "ERC20.address";
  "ERC20._beforeTokenTransfer";
  "ERC20.Transfer";
  "ERC20._mint";
  "supply.add";
  "ERC20._burn";
  "supply.sub";
  "ERC20.Approval";
  "ERC20.transfer" -> "ERC20._transfer" [ color = "green" ];
  "ERC20.approve" -> "ERC20._approve" [ color = "green" ];
  "ERC20.transferFrom" -> "ERC20._transfer" [ color = "green" ];
  "ERC20.transferFrom" -> "ERC20._approve" [ color = "green" ];
  "ERC20.increaseAllowance" -> "ERC20._approve" [ color = "green" ];
  "ERC20.decreaseAllowance" -> "ERC20._approve" [ color = "green" ];
  "ERC20._transfer" -> "ERC20.address" [ color = "green" ];
  "ERC20._transfer" -> "ERC20.address" [ color = "green" ];
  "ERC20._transfer" -> "ERC20._beforeTokenTransfer" [ color = "green" ];
  "ERC20._transfer" -> "ERC20.Transfer" [ color = "green" ];
  "ERC20._mint" -> "ERC20.address" [ color = "green" ];
  "ERC20._mint" -> "ERC20._beforeTokenTransfer" [ color = "green" ];
  "ERC20._mint" -> "ERC20.address" [ color = "green" ];
  "ERC20._mint" -> "supply.add" [ color = "orange" ];
  "ERC20._mint" -> "ERC20.Transfer" [ color = "green" ];
  "ERC20._mint" -> "ERC20.address" [ color = "green" ];
  "ERC20._burn" -> "ERC20.address" [ color = "green" ];
  "ERC20._burn" -> "ERC20._beforeTokenTransfer" [ color = "green" ];
  "ERC20._burn" -> "ERC20.address" [ color = "green" ];
  "ERC20._burn" -> "supply.sub" [ color = "orange" ];
  "ERC20._burn" -> "ERC20.Transfer" [ color = "green" ];
  "ERC20._burn" -> "ERC20.address" [ color = "green" ];
  "ERC20._approve" -> "ERC20.address" [ color = "green" ];
  "ERC20._approve" -> "ERC20.address" [ color = "green" ];
  "ERC20._approve" -> "ERC20.Approval" [ color = "green" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i2">Custom Error Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="lightgray">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="lightgray">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="green"]
key:i2:e -> key2:i2:w [color="orange"]
key:i2:e -> key2:i2:w [color="red"]
}
}

