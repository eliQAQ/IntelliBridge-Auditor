digraph G {
  graph [ ratio = "auto", page = "100", compound =true ];
subgraph "clusteriERC20" {
  graph [ label = "iERC20  (iface)", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "iERC20.balanceOf" [ label = "balanceOf", color = "blue" ];
  "iERC20.burn" [ label = "burn", color = "blue" ];
}

subgraph "clusteriRUNE" {
  graph [ label = "iRUNE  (iface)", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "iRUNE.transferTo" [ label = "transferTo", color = "blue" ];
}

subgraph "clusteriROUTER" {
  graph [ label = "iROUTER  (iface)", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "iROUTER.depositWithExpiry" [ label = "depositWithExpiry", color = "blue" ];
}

subgraph "clusterTHORChain_Router" {
  graph [ label = "THORChain_Router", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "THORChain_Router.nonReentrant" [ label = "nonReentrant", color = "yellow" ];
  "THORChain_Router.<Constructor>" [ label = "<Constructor>", color = "green" ];
  "THORChain_Router.depositWithExpiry" [ label = "depositWithExpiry", color = "blue" ];
  "THORChain_Router.deposit" [ label = "deposit" ];
  "THORChain_Router.transferAllowance" [ label = "transferAllowance", color = "blue" ];
  "THORChain_Router.transferOut" [ label = "transferOut", color = "green" ];
  "THORChain_Router.batchTransferOut" [ label = "batchTransferOut", color = "blue" ];
  "THORChain_Router.returnVaultAssets" [ label = "returnVaultAssets", color = "blue" ];
  "THORChain_Router.safeTransferFrom" [ label = "safeTransferFrom" ];
  "THORChain_Router._adjustAllowances" [ label = "_adjustAllowances" ];
  "THORChain_Router._routerDeposit" [ label = "_routerDeposit" ];
  "THORChain_Router.address" [ label = "address" ];
  "THORChain_Router.payable" [ label = "payable" ];
  "THORChain_Router.type" [ label = "type" ];
}

subgraph "clusterasset" {
  graph [ label = "asset", color = "lightgray" ];
  "asset.call" [ label = "call" ];
}

subgraph "cluster_asset" {
  graph [ label = "_asset", color = "lightgray" ];
  "_asset.call" [ label = "call" ];
}

  "THORChain_Router.depositWithExpiry";
  "THORChain_Router.deposit";
  "THORChain_Router.address";
  "THORChain_Router.safeTransferFrom";
  "THORChain_Router.transferAllowance";
  "THORChain_Router._adjustAllowances";
  "THORChain_Router._routerDeposit";
  "THORChain_Router.transferOut";
  "asset.call";
  "THORChain_Router.batchTransferOut";
  "THORChain_Router.payable";
  "THORChain_Router.returnVaultAssets";
  "_asset.call";
  "THORChain_Router.type";
  "THORChain_Router.depositWithExpiry" -> "THORChain_Router.deposit" [ color = "green" ];
  "THORChain_Router.deposit" -> "THORChain_Router.address" [ color = "green" ];
  "THORChain_Router.deposit" -> "THORChain_Router.address" [ color = "green" ];
  "THORChain_Router.deposit" -> "THORChain_Router.safeTransferFrom" [ color = "green" ];
  "THORChain_Router.transferAllowance" -> "THORChain_Router.address" [ color = "green" ];
  "THORChain_Router.transferAllowance" -> "THORChain_Router._adjustAllowances" [ color = "green" ];
  "THORChain_Router.transferAllowance" -> "THORChain_Router._routerDeposit" [ color = "green" ];
  "THORChain_Router.transferOut" -> "THORChain_Router.address" [ color = "green" ];
  "THORChain_Router.transferOut" -> "asset.call" [ color = "orange" ];
  "THORChain_Router.batchTransferOut" -> "THORChain_Router.transferOut" [ color = "green" ];
  "THORChain_Router.batchTransferOut" -> "THORChain_Router.payable" [ color = "green" ];
  "THORChain_Router.returnVaultAssets" -> "THORChain_Router.address" [ color = "green" ];
  "THORChain_Router.returnVaultAssets" -> "THORChain_Router._adjustAllowances" [ color = "green" ];
  "THORChain_Router.returnVaultAssets" -> "THORChain_Router._routerDeposit" [ color = "green" ];
  "THORChain_Router.safeTransferFrom" -> "THORChain_Router.address" [ color = "green" ];
  "THORChain_Router.safeTransferFrom" -> "_asset.call" [ color = "orange" ];
  "THORChain_Router.safeTransferFrom" -> "THORChain_Router.address" [ color = "green" ];
  "THORChain_Router.safeTransferFrom" -> "THORChain_Router.address" [ color = "green" ];
  "THORChain_Router._routerDeposit" -> "_asset.call" [ color = "orange" ];
  "THORChain_Router._routerDeposit" -> "THORChain_Router.type" [ color = "green" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i2">Custom Error Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="lightgray">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="lightgray">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="green"]
key:i2:e -> key2:i2:w [color="orange"]
key:i2:e -> key2:i2:w [color="red"]
}
}

