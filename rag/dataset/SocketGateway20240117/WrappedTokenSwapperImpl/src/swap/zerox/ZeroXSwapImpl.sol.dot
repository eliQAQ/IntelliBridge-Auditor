digraph G {
  graph [ ratio = "auto", page = "100", compound =true ];
subgraph "clusterZeroXSwapImpl" {
  graph [ label = "ZeroXSwapImpl", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "ZeroXSwapImpl.<Constructor>" [ label = "<Constructor>", color = "green" ];
  "ZeroXSwapImpl.<Receive Ether>" [ label = "<Receive Ether>", color = "blue" ];
  "ZeroXSwapImpl.<Fallback>" [ label = "<Fallback>", color = "blue" ];
  "ZeroXSwapImpl.performAction" [ label = "performAction", color = "blue" ];
  "ZeroXSwapImpl.performActionWithIn" [ label = "performActionWithIn", color = "blue" ];
  "ZeroXSwapImpl.payable" [ label = "payable" ];
  "ZeroXSwapImpl.ERC20" [ label = "ERC20" ];
  "ZeroXSwapImpl.address" [ label = "address" ];
  "ZeroXSwapImpl.SwapFailed" [ label = "SwapFailed" ];
  "ZeroXSwapImpl.PartialSwapsNotAllowed" [ label = "PartialSwapsNotAllowed" ];
  "ZeroXSwapImpl.SocketSwapTokens" [ label = "SocketSwapTokens" ];
}

subgraph "clusterzeroXExchangeProxy" {
  graph [ label = "zeroXExchangeProxy", color = "lightgray" ];
  "zeroXExchangeProxy.call" [ label = "call" ];
}

  "ZeroXSwapImpl.<Constructor>";
  "ZeroXSwapImpl.payable";
  "ZeroXSwapImpl.performAction";
  "ZeroXSwapImpl.ERC20";
  "ZeroXSwapImpl.address";
  "zeroXExchangeProxy.call";
  "ZeroXSwapImpl.SwapFailed";
  "ZeroXSwapImpl.PartialSwapsNotAllowed";
  "ZeroXSwapImpl.SocketSwapTokens";
  "ZeroXSwapImpl.performActionWithIn";
  "ZeroXSwapImpl.<Constructor>" -> "ZeroXSwapImpl.payable" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "zeroXExchangeProxy.call" [ color = "orange" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.SwapFailed" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.SwapFailed" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.PartialSwapsNotAllowed" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.payable" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performAction" -> "ZeroXSwapImpl.SocketSwapTokens" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "zeroXExchangeProxy.call" [ color = "orange" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.SwapFailed" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.SwapFailed" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.PartialSwapsNotAllowed" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.ERC20" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.address" [ color = "green" ];
  "ZeroXSwapImpl.performActionWithIn" -> "ZeroXSwapImpl.SocketSwapTokens" [ color = "green" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i2">Custom Error Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="lightgray">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="lightgray">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="green"]
key:i2:e -> key2:i2:w [color="orange"]
key:i2:e -> key2:i2:w [color="red"]
}
}

