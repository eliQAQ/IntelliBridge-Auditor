digraph G {
  graph [ ratio = "auto", page = "100", compound =true ];
subgraph "clusterEnumerableSetUpgradeable" {
  graph [ label = "EnumerableSetUpgradeable  (lib)", color = "lightgray", style = "filled", bgcolor = "lightgray" ];
  "EnumerableSetUpgradeable._add" [ label = "_add", color = "red" ];
  "EnumerableSetUpgradeable._remove" [ label = "_remove" ];
  "EnumerableSetUpgradeable._contains" [ label = "_contains" ];
  "EnumerableSetUpgradeable._length" [ label = "_length" ];
  "EnumerableSetUpgradeable._at" [ label = "_at" ];
  "EnumerableSetUpgradeable.add" [ label = "add", color = "white" ];
  "EnumerableSetUpgradeable.remove" [ label = "remove", color = "white" ];
  "EnumerableSetUpgradeable.contains" [ label = "contains", color = "white" ];
  "EnumerableSetUpgradeable.length" [ label = "length", color = "white" ];
  "EnumerableSetUpgradeable.at" [ label = "at", color = "white" ];
  "EnumerableSetUpgradeable.address" [ label = "address" ];
}

  "EnumerableSetUpgradeable._add";
  "EnumerableSetUpgradeable._contains";
  "EnumerableSetUpgradeable.add";
  "EnumerableSetUpgradeable.remove";
  "EnumerableSetUpgradeable._remove";
  "EnumerableSetUpgradeable.contains";
  "EnumerableSetUpgradeable.length";
  "EnumerableSetUpgradeable._length";
  "EnumerableSetUpgradeable.at";
  "EnumerableSetUpgradeable._at";
  "EnumerableSetUpgradeable.address";
  "EnumerableSetUpgradeable._add" -> "EnumerableSetUpgradeable._contains" [ color = "green" ];
  "EnumerableSetUpgradeable.add" -> "EnumerableSetUpgradeable._add" [ color = "green" ];
  "EnumerableSetUpgradeable.remove" -> "EnumerableSetUpgradeable._remove" [ color = "green" ];
  "EnumerableSetUpgradeable.contains" -> "EnumerableSetUpgradeable._contains" [ color = "green" ];
  "EnumerableSetUpgradeable.length" -> "EnumerableSetUpgradeable._length" [ color = "green" ];
  "EnumerableSetUpgradeable.at" -> "EnumerableSetUpgradeable._at" [ color = "green" ];
  "EnumerableSetUpgradeable.add" -> "EnumerableSetUpgradeable._add" [ color = "green" ];
  "EnumerableSetUpgradeable.remove" -> "EnumerableSetUpgradeable._remove" [ color = "green" ];
  "EnumerableSetUpgradeable.contains" -> "EnumerableSetUpgradeable._contains" [ color = "green" ];
  "EnumerableSetUpgradeable.length" -> "EnumerableSetUpgradeable._length" [ color = "green" ];
  "EnumerableSetUpgradeable.at" -> "EnumerableSetUpgradeable.address" [ color = "green" ];
  "EnumerableSetUpgradeable.at" -> "EnumerableSetUpgradeable._at" [ color = "green" ];
  "EnumerableSetUpgradeable.add" -> "EnumerableSetUpgradeable._add" [ color = "green" ];
  "EnumerableSetUpgradeable.remove" -> "EnumerableSetUpgradeable._remove" [ color = "green" ];
  "EnumerableSetUpgradeable.contains" -> "EnumerableSetUpgradeable._contains" [ color = "green" ];
  "EnumerableSetUpgradeable.length" -> "EnumerableSetUpgradeable._length" [ color = "green" ];
  "EnumerableSetUpgradeable.at" -> "EnumerableSetUpgradeable._at" [ color = "green" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i2">Custom Error Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="lightgray">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="lightgray">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="green"]
key:i2:e -> key2:i2:w [color="orange"]
key:i2:e -> key2:i2:w [color="red"]
}
}

